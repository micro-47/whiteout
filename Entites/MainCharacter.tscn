[gd_scene load_steps=9 format=3 uid="uid://c3m8q60boqasu"]

[ext_resource type="Texture2D" uid="uid://dva18o602n8qk" path="res://icon.svg" id="1_y5fbm"]
[ext_resource type="PackedScene" uid="uid://c0lpmnxcukcgi" path="res://Entites/weapon_reference.tscn" id="2_ubdlf"]

[sub_resource type="GDScript" id="GDScript_1vbca"]
resource_name = "Basic_Movement"
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0

@export var DASH_DURATION = 1.0
@export var DASH_COOLDOWN = 2.0
@export var DASH_MULTIPLIER = 3.0

var dash_available = true
var dashing = false

func dash_ended():
	dashing = false
	# this could also be done inside the initial dasher
	get_tree().create_timer(DASH_COOLDOWN).timeout.connect(func(): dash_available=true)

func _input(event: InputEvent) -> void:
	if dash_available and Input.is_key_pressed(KEY_1):
		# TODO: if not moving, then dash in direction
		# TODO: change key
		dashing = true
		dash_available = false
		get_tree().create_timer(DASH_DURATION).timeout.connect(dash_ended)

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	# TODO: change key
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * get_x_speed()
	else:
		velocity.x = move_toward(velocity.x, 0, get_x_speed())

	move_and_slide()

func get_x_speed():
	return SPEED * (DASH_MULTIPLIER if dashing else 1.0)
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_txws2"]

[sub_resource type="Animation" id="Animation_fue42"]
resource_name = "Dash"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(),
"transitions": PackedFloat32Array(),
"update": 0,
"values": []
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_i8mkm"]
_data = {
"Dash": SubResource("Animation_fue42")
}

[sub_resource type="RectangleShape2D" id="RectangleShape2D_gj2qj"]
size = Vector2(20, 126.058)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_e2cx6"]

[node name="MainCharacter" type="Node2D"]

[node name="CharacterBody2D" type="CharacterBody2D" parent="."]
collision_mask = 3
script = SubResource("GDScript_1vbca")

[node name="CollisionShape2D" type="CollisionShape2D" parent="CharacterBody2D"]
shape = SubResource("RectangleShape2D_txws2")

[node name="Sprite2D" type="Sprite2D" parent="CharacterBody2D"]
scale = Vector2(0.15, 0.15)
texture = ExtResource("1_y5fbm")

[node name="Camera2D" type="Camera2D" parent="CharacterBody2D"]
offset = Vector2(0, -20)
zoom = Vector2(2, 2)
position_smoothing_enabled = true
drag_left_margin = 0.5
drag_right_margin = 0.5

[node name="AnimationPlayer" type="AnimationPlayer" parent="CharacterBody2D"]
libraries = {
"": SubResource("AnimationLibrary_i8mkm")
}

[node name="Weapon" parent="CharacterBody2D" instance=ExtResource("2_ubdlf")]
position = Vector2(10, 0)

[node name="hitbox" type="Area2D" parent="CharacterBody2D"]
position = Vector2(10, 0)

[node name="CollisionShape2D" type="CollisionShape2D" parent="CharacterBody2D/hitbox"]
rotation = 0.359538
scale = Vector2(0.112, 0.112)
shape = SubResource("RectangleShape2D_gj2qj")

[node name="hurtbox" type="Area2D" parent="CharacterBody2D"]
position = Vector2(20, 0)
collision_mask = 3

[node name="CollisionShape2D" type="CollisionShape2D" parent="CharacterBody2D/hurtbox"]
position = Vector2(-20, 0)
shape = SubResource("RectangleShape2D_e2cx6")
